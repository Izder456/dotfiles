## Make 'nextword' (Ctrl+Right) and 'chopwordright' (Ctrl+Delete)
## stop at word ends instead of at beginnings.
set afterends

## When soft line wrapping is enabled, make it wrap lines at blanks
## (tabs and spaces) instead of always at the edge of the screen.
set atblanks

## Automatically indent a newly created line to the same number of
## tabs and/or spaces as the preceding line -- or as the next line
## if the preceding line is the beginning of a paragraph.
set autoindent

## Automatically hard-wrap the current line when it becomes overlong.
set breaklonglines

## Do case-sensitive searches by default.
set casesensitive

## Constantly display the cursor position in the status bar or minibar.
set constantshow

## Use cut-from-cursor-to-end-of-line by default. 
#set cutfromcursor

## Do not use the line below the title bar, leaving it entirely blank.
set emptyline

## Scroll the buffer contents per half-screen instead of per line.
set jumpyscrolling

## Display line numbers to the left (and any anchors in the margin).
set linenumbers

## The opening and closing brackets that are found by a matching-bracket
## search.  This may not contain blank characters.  The opening brackets
## must come before the closing ones, and they must be in the same order.
set matchbrackets "(<[{)>]}"

## Enable mouse support, if available for your system.  When enabled,
## mouse clicks can be used to place the cursor, set the mark (with a
## double click), and execute shortcuts.  The mouse will work in the
## X Window System, and on the console when gpm is running.
set mouse

## Don't automatically add a newline when a file does not end with one.
set nonewlines

## The regular expression that matches quoting characters in email
## or line-comment introducers in source code.  The default is:
set quotestr "^([ 	]*([!#%:;>|}]|//))+"

## Try to work around a mismatching terminfo terminal description.
set rawsequences

## Put the cursor on the highlighted item in the file browser, and
## show the cursor in the help viewer; useful for people who use a
## braille display and people with poor vision.
set showcursor

## Make the Home key smarter: when Home is pressed anywhere but at the
## very beginning of non-whitespace characters on a line, the cursor
## will jump to that beginning (either forwards or backwards).  If the
## cursor is already at that position, it will jump to the true start
## of the line (the left edge).
set smarthome

## Spread overlong lines over multiple screen lines.
set softwrap

## Use this spelling checker instead of the internal one.  This option
## does not have a default value.
set speller "aspell -x -c"

## Use the end of the title bar for some state flags: I = auto-indenting,
## M = mark, L = hard-wrapping long lines, R = recording, S = soft-wrapping.
set stateflags

## Use this tab size instead of the default; it must be greater than 0.
set tabsize 4

## Convert each typed tab to the fitting number of spaces.
set tabstospaces

## Snip whitespace at the end of lines when justifying or hard-wrapping.
set trimblanks

## Paint the interface elements of nano.  These are examples; there are
## no colors by default, except for errorcolor and spotlightcolor.
set titlecolor bold,white,blue
set promptcolor lightwhite,grey
set statuscolor bold,white,green
set errorcolor bold,white,red
set spotlightcolor black,lightyellow
set selectedcolor lightwhite,magenta
set stripecolor ,yellow
set scrollercolor cyan
set numbercolor cyan
set keycolor cyan
set functioncolor green

## To include most of the existing syntax definitions, you can do:
include "/usr/local/share/nano/*.nanorc"

## If <Tab> should always produce four spaces when editing a Python file,
## independent of the settings of 'tabsize' and 'tabstospaces':
extendsyntax python tabgives "    "

## If <Tab> should always produce an actual TAB when editing a Makefile:
extendsyntax makefile tabgives "	"
